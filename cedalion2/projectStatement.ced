'/bootstrap':signature(projectStatement(Container,Proj,Path)::'/bootstrap2':traversal,[Container::'/bootstrap':string,Proj::'/bootstrap':visualization,Path::cpi:path]).
'/util':behavior(projectStatement(Container,Proj,Path)::'/bootstrap2':traversal,!'should project a top-level statement', ('/bootstrap2':termTraversal([ (foo:-builtin:true)]::'/bootstrap':list('/bootstrap':statement),'/bootstrap2':comp(projectStatement(!local,Proj,StatementPath),'/bootstrap2':comp('/bootstrap2':skipTo(cpi:path(!'f.ced',[1,1])),'/bootstrap2':track(cpi:path(!'f.ced',[])))),_,_::_),'/util':assertEqual(StatementPath,cpi:path(!'f.ced',[1]),cpi:path),'/bootstrap':true(\+builtin:var(Proj::'/bootstrap':visualization)))).
'/util':behavior(projectStatement(Container,Proj,Path)::'/bootstrap2':traversal,!'should not project a statement that is not top-level',\+'/bootstrap2':traverseAround('/bootstrap2':comp(projectStatement(!foo,_,_),'/bootstrap2':comp('/bootstrap2':skipTo(cpi:path(!'f.ced',[1,1,1])),'/bootstrap2':track(cpi:path(!'f.ced',[1,1])))),_::'/bootstrap':statement,_::_,_)).
annotation:shrink(('/bootstrap2':traverseAround('/bootstrap2':comp(projectStatement(Container,Proj,StatementPath),'/bootstrap2':comp('/bootstrap2':skipTo(InnerPath),'/bootstrap2':track(StatementPath))),Statement::'/bootstrap':statement,_::_,noop):-isPrefix(StatementPath,InnerPath),'/bootstrap':statementPath(StatementPath),runInContainer('/bootstrap2':projectAST(Statement::'/bootstrap':statement,StatementPath,Proj),Container))).
'/util':behavior(projectStatement(Container,Proj,Path)::'/bootstrap2':traversal,!'should project the current location if it is above a top-level statement', ('/bootstrap2':termTraversal([ (foo:-builtin:true),'/bootstrap':bar, (foo:-builtin:true)]::'/bootstrap':list('/bootstrap':statement),'/bootstrap2':comp(projectStatement(!local,Proj,StatementPath),'/bootstrap2':comp('/bootstrap2':skipTo(cpi:path(!'f.ced',[2,2])),'/bootstrap2':track(cpi:path(!'f.ced',[])))),_,_::_),'/util':assertEqual(StatementPath,cpi:path(!'f.ced',[2,2]),cpi:path),'/bootstrap':true(\+builtin:var(Proj::'/bootstrap':visualization)))).
annotation:shrink(('/bootstrap2':traverseAround('/bootstrap2':comp(projectStatement(Container,Proj,LinkPath),'/bootstrap2':comp('/bootstrap2':skipTo(LinkPath),'/bootstrap2':track(LinkPath))),List::'/bootstrap':list('/bootstrap':statement),_::_,noop):-'all2'(LinkPath),runInContainer('/bootstrap2':projectAST(List::'/bootstrap':list('/bootstrap':statement),LinkPath,Proj),Container))).
'/bootstrap':signature('all2'(LinkPath)::'/bootstrap':pred,[LinkPath::cpi:path]).
'all2'(cpi:path(File,[])):-builtin:true.
'all2'(cpi:path(File,[2|Path])):-'all2'(cpi:path(File,Path)).
'/bootstrap':signature(projectStatement(Content,Path,Container,StatementPath,Proj)::'/bootstrap':pred,annotation:changeMode([Content::'/bootstrap':list('/bootstrap':statement),Path::cpi:path,Container::'/bootstrap':string,StatementPath::cpi:path,Proj::'/bootstrap':visualization],'/bootstrap':vert)).
'/util':behavior(projectStatement(Content,Path,Container,StatementPath,Proj)::'/bootstrap':pred,!'should project a statement', (projectStatement([ (foo:-builtin:true),'/bootstrap':bar, (foo:-builtin:true)],cpi:path(!'f.ced',[2,2,1,1]),!local,SPath,Proj),'/util':assertEqual(SPath,cpi:path(!'f.ced',[2,2,1]),cpi:path))).
annotation:shrink((projectStatement(Content,cpi:path(File,Path),Container,StatementPath,Proj):-'/bootstrap2':termTraversal(Content::'/bootstrap':list('/bootstrap':statement),'/bootstrap2':comp(projectStatement(Container,Proj,StatementPath),'/bootstrap2':comp('/bootstrap2':skipTo(cpi:path(File,Path)),'/bootstrap2':track(cpi:path(File,[])))),_,_::_))).
'/bootstrap':signature(isPrefix(StatementPath,InnerPath)::'/bootstrap':pred,[StatementPath::cpi:path,InnerPath::cpi:path]).
'/bootstrap':projection(isPrefix(StatementPath,InnerPath)::'/bootstrap':pred,'/bootstrap':horiz(['/bootstrap':vis(StatementPath::cpi:path),'/bootstrap':label(!'is a prefix of'),'/bootstrap':vis(InnerPath::cpi:path)])).
isPrefix(cpi:path(File,Prefix),cpi:path(File,Path)):-'/bootstrap':append(Prefix,_,Path,'/bootstrap':number).
