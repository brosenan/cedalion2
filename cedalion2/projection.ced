'/bootstrap':signature(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,[TDAST::'/bootstrap':typedTerm,Mode::'/bootstrap':mode,Container::'/bootstrap':string,Proj::'/bootstrap':visualization]).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a number as a label', (project(4::'/bootstrap':number,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':label(!'4'),'/bootstrap':visualization))).
'/util':behavior(project(TDAST,cpi:default,Container,Proj)::'/bootstrap':pred,!'should project a number variable as a label in green italics', (project('$VAR$'(!'Foo')::'/bootstrap':number,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(!'Foo'),cpi:rgb(0,255,0))),'/bootstrap':visualization))).
project(Term::'/bootstrap':number,_,_,'/bootstrap':label(Str)):-builtin:number(Term::'/bootstrap':number),'/Functional':eval('/Functional':'num2str'('/Functional':const(Term)),'/bootstrap':string,Str).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a string as a magenta label', (project(!hello::'/bootstrap':string,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':color('/bootstrap':label(!hello),cpi:rgb(255,0,255)),'/bootstrap':visualization))).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a string variable as a label in green italics', (project('$VAR$'(!'Foo')::'/bootstrap':string,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(!'Foo'),cpi:rgb(0,255,0))),'/bootstrap':visualization))).
project(Str::'/bootstrap':string,_,_,'/bootstrap':color('/bootstrap':label(Str),cpi:rgb(255,0,255))):-builtin:string(Str::'/bootstrap':string).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a variable as a label in green italics', (project('$VAR$'(!'Foo')::'/bootstrap':pred,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(!'Foo'),cpi:rgb(0,255,0))),'/bootstrap':visualization))).
project('$VAR$'(Name)::_,_,_,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(Name),cpi:rgb(0,255,0)))):-builtin:true.
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a compound term as name(args)', (project(builtin:var('$VAR$'::'/bootstrap':number)::'/bootstrap':pred,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':horiz(['/bootstrap':label(!var),'/bootstrap':brackets('/bootstrap':horiz(['/bootstrap':vis(('$VAR$'::'/bootstrap':number)::'/bootstrap':typedTerm)]),40,41)]),'/bootstrap':visualization))).
project(TTerm,_,Container,Proj):-defaultProjection(TTerm,Container,Proj).
