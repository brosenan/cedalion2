'/bootstrap':signature(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,[TDAST::'/bootstrap':typedTerm,Mode::'/bootstrap':mode,Container::'/bootstrap':string,Proj::'/bootstrap':visualization]).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a number as a label', (project(4::'/bootstrap':number,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':label(!'4'),'/bootstrap':visualization))).
'/util':behavior(project(TDAST,cpi:default,Container,Proj)::'/bootstrap':pred,!'should project a number variable as a label in green italics', (project('$VAR$'(!'Foo')::'/bootstrap':number,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(!'Foo'),cpi:rgb(0,255,0))),'/bootstrap':visualization))).
project(Term::'/bootstrap':number,_,_,'/bootstrap':label(Str)):-builtin:number(Term::'/bootstrap':number),'/Functional':eval('/Functional':'num2str'('/Functional':const(Term)),'/bootstrap':string,Str).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a string as a magenta label', (project(!hello::'/bootstrap':string,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':color('/bootstrap':label(!hello),cpi:rgb(255,0,255)),'/bootstrap':visualization))).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a string variable as a label in green italics', (project('$VAR$'(!'Foo')::'/bootstrap':string,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(!'Foo'),cpi:rgb(0,255,0))),'/bootstrap':visualization))).
project(Str::'/bootstrap':string,_,_,'/bootstrap':color('/bootstrap':label(Str),cpi:rgb(255,0,255))):-builtin:string(Str::'/bootstrap':string).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a compound term as name(args)', (project(builtin:var('$VAR$'::'/bootstrap':number)::'/bootstrap':pred,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':horiz(['/bootstrap':label(!var),'/bootstrap':brackets('/bootstrap':horiz(['/bootstrap':vis(('$VAR$'::'/bootstrap':number)::'/bootstrap':typedTerm)]),40,41)]),'/bootstrap':visualization))).
'/bootstrap':defAtom(fooMode::'/bootstrap':mode).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should consult userVisualization in the container', (project('/bootstrap2':foo(4)::'/bootstrap2':bar,fooMode,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':vert(['/bootstrap':label(!foo),'/bootstrap':vis(4::'/bootstrap':number)]),'/bootstrap':visualization))).
'/bootstrap':defAtom(barMode::'/bootstrap':mode).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should default to the default mode if a particular mode is not supported', (project('/bootstrap2':foo(4)::'/bootstrap2':bar,barMode,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':horiz(['/bootstrap':label(!foo),'/bootstrap':vis(4::'/bootstrap':number)]),'/bootstrap':visualization))).
annotation:shrink((project(TTerm,Mode,Container,Proj):-astCompund(TTerm),builtin:if(tryUserVisualization(TTerm,Mode,Container,Proj),builtin:true,builtin:if(tryUserVisualization(TTerm,cpi:default,Container,Proj),builtin:true,defaultProjection(TTerm,Proj))))).
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project a variable as a label in green italics', (project('$VAR$'(!'Foo')::'/bootstrap':pred,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(!'Foo'),cpi:rgb(0,255,0))),'/bootstrap':visualization))).
project('$VAR$'(Name)::_,_,_,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(Name),cpi:rgb(0,255,0)))):-builtin:true.
'/util':behavior(project(TDAST,Mode,Container,Proj)::'/bootstrap':pred,!'should project an unnamed variable as a label _ in green italics', (project('$VAR$'::'/bootstrap':pred,cpi:default,!test,Proj),'/util':assertEqual(Proj,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(!'_'),cpi:rgb(0,255,0))),'/bootstrap':visualization))).
project('$VAR$'::_,_,_,'/bootstrap':italic('/bootstrap':color('/bootstrap':label(!'_'),cpi:rgb(0,255,0)))):-builtin:true.
'/bootstrap':signature(tryUserVisualization(TTerm,Mode,Container,Proj)::'/bootstrap':pred,[TTerm::'/bootstrap':typedTerm,Mode::'/bootstrap':mode,Container::'/bootstrap':string,Proj::'/bootstrap':visualization]).
annotation:shrink((tryUserVisualization(TTerm,Mode,Container,Proj):-tryInContainer('/bootstrap':userVisualization(TTerm,Mode,[],Proj),Container,Exception, (defaultProjection(TTerm,ProjPrime),Proj::'/bootstrap':visualization='/bootstrap':horiz(['/bootstrap':tooltip('/bootstrap':color('/bootstrap':label(!'E'),cpi:rgb(255,0,0)),'/bootstrap':vis(cpi:immediateDescriptor(Exception,[])::'/bootstrap':exception)),ProjPrime])::'/bootstrap':visualization)))).
'test@/bootstrap':userVisualization('test@/bootstrap2':foo(X)::'test@/bootstrap2':bar,'test@/cedalion2':fooMode,_,'test@/bootstrap':vert(['test@/bootstrap':label(!foo),'test@/bootstrap':vis(X::'test@/bootstrap':number)])):-builtin:true.
'test@/bootstrap':userVisualization('test@/bootstrap2':foo(X)::'test@/bootstrap2':bar,'test@cpi':default,_,'test@/bootstrap':horiz(['test@/bootstrap':label(!foo),'test@/bootstrap':vis(X::'test@/bootstrap':number)])):-builtin:true.
