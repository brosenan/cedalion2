'/bootstrap':defAtom(userAction::'/bootstrap':type).
'/bootstrap':sigProj(userAction(Cmd,Container)::'/impred':expr(userAction),[Cmd::'/Functional':expr('/bootstrap2/commands':action),Container::'/bootstrap':string],'/bootstrap':horiz(['/bootstrap':vis(Cmd::'/Functional':expr('/bootstrap2/commands':action)),'/bootstrap':label(! (@)),'/bootstrap':vis(Container::'/bootstrap':string)])).
'/bootstrap':defAtom(fooAction::'/Functional':expr('/bootstrap2/commands':action)).
'/bootstrap':defAtom(done::userAction).
'/util':behavior(userAction(Cmd,Container)::'/impred':expr(userAction),!'should  evaluate to done if Cmd evaluates to done in container', ('/impred':simulate('/impred':eval(userAction(fooAction,!test),userAction,Action),[],'/impred':true),'/util':assertEqual(Action,done,userAction))).
'/bootstrap':defAtom(barAction::'/Functional':expr('/bootstrap2/commands':action)).
'/util':behavior(userAction(Cmd,Container)::'/impred':expr(userAction),!'should evaluate interactions', ('/impred':simulate('/impred':eval(userAction(barAction,!test),userAction,Action),['/impred':task('/impred':localGet(!foo),_,'/impred':localStoreVal),'/impred':task('/impred':localGet(!foo),_,'/impred':localStoreVal)],'/impred':true),'/util':assertEqual(Action,done,userAction))).
'/bootstrap':signature(continuation(Answer,Cont,Container)::'/impred':localStoreVal,[Answer::'/bootstrap':typedTerm,Cont::'/Functional':expr('/bootstrap2/commands':action),Container::'/bootstrap':string]).
'/bootstrap':signature(cont(Q,UUID)::userAction,[Q::'/bootstrap2/commands':question,UUID::'/bootstrap':string]).
'/util':behavior(userAction(Cmd,Container)::'/impred':expr(userAction),!'should evaluate Q&A by storing the continuation and asking the question', ('/impred':simulate('/impred':eval(userAction('/bootstrap2/commands':seq('/bootstrap2/commands':interact('/bootstrap2/commands':qna('/bootstrap2/commands':someQuestion(3),N::'/bootstrap':number)),'/bootstrap2/commands':interact('/bootstrap2/commands':someInteraction(N))),!test),userAction,Action),['/impred':task('/impred':uuid,!'AABBCC','/bootstrap':string),'/impred':task('/impred':localSet(!'AABBCC',continuation(N::'/bootstrap':number,'/bootstrap2/commands':seq('/Functional':const('/bootstrap2/commands':done),'/bootstrap2/commands':interact('/bootstrap2/commands':someInteraction(N))),Container)),_,'/impred':localStoreVal)],_),'/util':assertEqual(Action,cont('/bootstrap2/commands':someQuestion(3),!'AABBCC'),userAction))).
'/bootstrap':signature(do(Q)::userAction,[Q::'/bootstrap2/commands':question]).
'/util':behavior(userAction(Cmd,Container)::'/impred':expr(userAction),!'should evaluate to do(Q) if the continuation is a noop', ('/impred':simulate('/impred':eval(userAction('/bootstrap2/commands':interact('/bootstrap2/commands':qna('/bootstrap2/commands':someQuestion(3),N::'/bootstrap':number)),!test),userAction,Action),[],_),'/util':assertEqual(Action,do('/bootstrap2/commands':someQuestion(3)),userAction))).
'/bootstrap':sigProj(interaction(Interaction,Container)::'/impred':impred,[Interaction::'/bootstrap2/commands':interaction,Container::'/bootstrap':string],'/bootstrap':horiz(['/bootstrap':vis(Interaction::'/bootstrap2/commands':interaction),'/bootstrap':label(! (@)),'/bootstrap':vis(Container::'/bootstrap':string)])).
'/impred':clause(interaction('/bootstrap2/commands':someInteraction(N),!test),'/impred':task('/impred':localGet(!foo),_,'/impred':localStoreVal)).
'/bootstrap':signature(illegalCommand(Cmd,ActionPrime)::'/bootstrap':exception,[Cmd::'/Functional':expr('/bootstrap2/commands':action),ActionPrime::'/bootstrap2/commands':action]).
'/bootstrap':signature(interactionNotDefined(Interaction)::'/bootstrap':exception,[Interaction::'/bootstrap2/commands':interaction]).
annotation:shrink('/impred':clause('/impred':eval(userAction(Cmd,Container),userAction,Action),'/impred':conj('/impred':pred(evalCmdInContainerOrNot(Cmd,ActionPrime,Container)),'/impred':if('/impred':pred(ActionPrime::'/bootstrap2/commands':action='/bootstrap2/commands':done::'/bootstrap2/commands':action),'/impred':pred(Action::userAction=done::userAction),'/impred':if('/impred':pred(ActionPrime::'/bootstrap2/commands':action='/bootstrap2/commands':cont(Interaction,Cont)::'/bootstrap2/commands':action),'/impred':if('/impred':pred(Interaction::'/bootstrap2/commands':interaction='/bootstrap2/commands':qna(Q,An)::'/bootstrap2/commands':interaction),'/impred':if('/impred':pred(Cont::'/Functional':expr('/bootstrap2/commands':action)='/Functional':const('/bootstrap2/commands':done)::'/Functional':expr('/bootstrap2/commands':action)),'/impred':pred(Action::userAction=do(Q)::userAction),'/impred':conj('/impred':task('/impred':uuid,UUID,'/bootstrap':string),'/impred':conj('/impred':task('/impred':localSet(UUID,continuation(An,Cont,Container)),_,'/impred':localStoreVal),'/impred':pred(Action::userAction=cont(Q,UUID)::userAction)))),'/impred':if(interaction(Interaction,Container),'/impred':eval(userAction(Cont,Container),userAction,Action),'/impred':pred(builtin:throw(interactionNotDefined(Interaction))))),'/impred':pred(builtin:throw(illegalCommand(Cmd,ActionPrime)))))))).
'/bootstrap':signature(evalCmdInContainerOrNot(Cmd,Action,Container)::'/bootstrap':pred,[Cmd::'/Functional':expr('/bootstrap2/commands':action),Action::'/bootstrap2/commands':action,Container::'/bootstrap':string]).
'/bootstrap':projection(evalCmdInContainerOrNot(Cmd,Action,Container)::'/bootstrap':pred,'/bootstrap':horiz(['/bootstrap':label(!eval),'/bootstrap':vis(Cmd::'/Functional':expr('/bootstrap2/commands':action)),'/bootstrap':label(! (as)),'/bootstrap':vis(Action::'/bootstrap2/commands':action),'/bootstrap':label(!in),'/bootstrap':vis(Container::'/bootstrap':string),'/bootstrap':label(!'or not')])).
annotation:shrink((evalCmdInContainerOrNot(Cmd,Action,Container):-builtin:if(annotation:parentheses(builtin:catch(builtin:timeout('/cedalion2':runInContainer('/Functional':eval(Cmd,'/bootstrap2/commands':action,Action),Container),50),Ex,builtin:throw(Ex))),builtin:true,'/Functional':eval(Cmd,'/bootstrap2/commands':action,Action)))).
'test@/Functional':eval('test@/cedalion2/userAction':fooAction,'test@/bootstrap2/commands':action,'test@/bootstrap2/commands':done):-builtin:true.
'test@/Functional':eval('test@/cedalion2/userAction':barAction,'test@/bootstrap2/commands':action,'test@/bootstrap2/commands':cont('test@/bootstrap2/commands':someInteraction(N),'test@/bootstrap2/commands':interact('test@/bootstrap2/commands':someInteraction(N)))):-builtin:true.
