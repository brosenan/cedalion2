'/bootstrap':signature(fileSync(Dir)::'/impred':impred,[Dir::'/bootstrap':string]).
'/util':behavior(fileSync(Dir)::'/impred':impred,!'should search for files under Dir', ('/impred':simulate(fileSync(!'/foo/bar'),['/impred':task('/nodalion':exec([!sh,!'-c',FindCmd],CWD),[],'/bootstrap':list('/bootstrap':string))],_),'/util':assertEqual(FindCmd,!'find . -name "*.ced" | sort | xargs stat -c %n,%Y','/bootstrap':string),'/util':assertEqual(CWD,!'/foo/bar','/bootstrap':string))).
'/bootstrap':signature(strList(L)::'/impred':localStoreVal,[L::'/bootstrap':list('/bootstrap':string)]).
'/util':behavior(fileSync(Dir)::'/impred':impred,!'should fetch the old file list of files from local storage','/impred':simulate('/impred':with('/nodalion':exec(_,_),[],'/bootstrap':list('/bootstrap':string),fileSync(!'/foo/bar')),['/impred':task('/impred':localGet(!'files@/foo/bar'),strList([]),'/impred':localStoreVal)],_)).
'/util':behavior(fileSync(Dir)::'/impred':impred,!'should load and remove elements based on plan','/impred':simulate('/impred':with('/impred':localGet(_),strList([]),'/impred':localStoreVal,'/impred':with('/nodalion':exec(_,_),[!'./a/b.ced,1234',!'./a/c.ced,2345'],'/bootstrap':list('/bootstrap':string),fileSync(!'/foo/bar'))),['/impred':task('/impred':readSourceFile(!'/foo/bar/a/b.ced',!'/a'),[],'/bootstrap':list('/bootstrap':pred)),'/impred':task('/impred':readSourceFile(!'/foo/bar/a/c.ced',!'/a'),[],'/bootstrap':list('/bootstrap':pred))],_)).
'/util':behavior(fileSync(Dir)::'/impred':impred,!'should store the file list in local store','/impred':simulate('/impred':with('/impred':localGet(_),strList([]),'/impred':localStoreVal,'/impred':with('/nodalion':exec(_,_),[],'/bootstrap':list('/bootstrap':string),fileSync(!'/foo/bar'))),['/impred':task('/impred':localSet(!'files@/foo/bar',strList([])),_,'/impred':localStoreVal)],_)).
annotation:shrink('/impred':clause(fileSync(Dir),'/impred':conj('/impred':task('/nodalion':exec([!sh,!'-c',!'find . -name "*.ced" | sort | xargs stat -c %n,%Y'],Dir),New,'/bootstrap':list('/bootstrap':string)),'/impred':conj('/impred':pred('/Functional':eval('/Functional':applyBinOp('/Functional':const(!'files@'),'/Functional':concat,'/Functional':const(Dir)),'/bootstrap':string,Key)),'/impred':conj('/impred':eval('/impred':localGet(Key,strList([])),'/impred':localStoreVal,strList(Old)),'/impred':conj('/impred':pred(fileSyncPlan(Dir,New,Old,Dir,Plan)),'/impred':conj(Plan,'/impred':task('/impred':localSet(Key,strList(New)),_,'/impred':localStoreVal)))))))).
