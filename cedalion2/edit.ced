'/bootstrap':signature(edit(Path,TOld,TNew)::'/Functional':expr('/bootstrap2/commands':action),[Path::cpi:path,TOld::'/bootstrap':typedTerm,TNew::'/bootstrap':typedTerm]).
'/bootstrap':projection(edit(Path,TOld,TNew)::'/Functional':expr('/bootstrap2/commands':action),'/bootstrap':horiz(['/bootstrap':label(!edit),'/bootstrap':vis(TOld::'/bootstrap':typedTerm),'/bootstrap':symbol(8608),'/bootstrap':vis(TNew::'/bootstrap':typedTerm),'/bootstrap':label(!at),'/bootstrap':vis(Path::cpi:path)])).
'/bootstrap':signature(readFileContent(File,Content)::'/bootstrap2/commands':interaction,[File::'/bootstrap':string,Content::'/bootstrap':list('/bootstrap':statement)]).
'/util':behavior(edit(Path,TOld,TNew)::'/Functional':expr('/bootstrap2/commands':action),!'should read the content of a file', ('/Functional':eval('/bootstrap2/commands':simulate([readFileContent(File,[ (foo:-builtin:true)])],edit(cpi:path(!'foo.ced',[1,2]),X::T,builtin:fail::'/bootstrap':pred)),'/bootstrap2/commands':action,Next),'/util':assertEqual(File,!'foo.ced','/bootstrap':string))).
'/bootstrap':signature(storeUndo(File,From,To)::'/bootstrap2/commands':interaction,[File::'/bootstrap':string,From::'/bootstrap':typedTerm,To::'/bootstrap':typedTerm]).
'/bootstrap':disabled('/util':behavior(edit(Path,TOld,TNew)::'/Functional':expr('/bootstrap2/commands':action),!'should store the undo operation','/Functional':eval('/bootstrap2/commands':simulate([readFileContent(!'foo.ced',[ (foo:-builtin:true)]),storeUndo(!'foo.ced',From,To)],edit(cpi:path(!'foo.ced',[1,2]),X::T,builtin:fail::'/bootstrap':pred)),'/bootstrap2/commands':action,Next))).
'/Functional':def(edit(cpi:path(File,_),TOld,TNew),'/bootstrap2/commands':action,'/bootstrap2/commands':interact(readFileContent(File,Content))).
